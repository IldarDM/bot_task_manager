from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

from src.database.redis_client import redis_client
from src.database.statements import UserState, FSMState

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    user_id = message.from_user.id
    await redis_client.set_user_state(user_id, UserState.STARTED)

    await message.answer(f"""
–°–∞–ª—é—Ç, {message.from_user.full_name}!
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TaskFlow - –±–æ—Ç–∞, –ø—Ä–∏–∑–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –≤–µ—á–Ω—ã–º–∏ –Ω–∞—Å—É—â–Ω—ã–º–∏ –¥–µ–ª–∞–º–∏ üöÄ

–ò—Å–ø–æ–ª—å–∑—É–π /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.
–ò—Å–ø–æ–ª—å–∑—É–π /login, —á—Ç–æ–±—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.
""")


@router.message(Command("help"))
async def cmd_help(message: Message):
    await message.answer("""
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/login - –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å

–°–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏...
""")


@router.message(Command("status"))
async def cmd_status(message: Message):
    user_id = message.from_user.id
    user_state = await redis_client.get_user_state(user_id)

    if user_state:
        await message.answer(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {user_state}")
    else:
        await message.answer("–°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")


@router.message(Command("login"))
async def cmd_login(message: Message):
    await message.answer("""
üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Task Manager

–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
–ü–æ–∫–∞ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /status, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
""")
